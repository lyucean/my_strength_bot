<?php


namespace msb\command;

use Exception;
use msb\core\DB;
use Telegram;

class Change
{
    private Telegram $telegram;
    private int $chat_id;
    private DB $db;

    public function __construct($telegram)
    {
        $this->telegram = $telegram;
        $this->chat_id = $this->telegram->ChatID();
        $this->db = new DB();
    }

    public function index()
    {
        // available only if messages exist
        if (empty($this->db->getMessages($this->chat_id))) {
            (new Error($this->telegram))->send(
                '–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –º–Ω–µ –Ω–µ—á–µ–≥–æ –º–µ–Ω—è—Ç—å',
                false
            );
            return;
        }

        $this->telegram->sendMessage(
            [
                'chat_id' => $this->chat_id,
                'reply_markup' => $this->telegram->buildInlineKeyBoard(
                    [
                        [
                            $this->telegram->buildInlineKeyBoardButton(
                                '‚úè –ò–∑–º–µ–Ω–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ',
                                $url = '',
                                '/change/choice'
                            )
                        ],
                        [
                            $this->telegram->buildInlineKeyBoardButton(
                                '‚ùå –£–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ –ø—Ä–∏—Å–ª–∞–Ω–Ω–æ–µ',
                                $url = '',
                                '/change/delete_last_sent'
                            )
                        ],
                        [
                            $this->telegram->buildInlineKeyBoardButton(
                                '‚ùå –£–¥–∞–ª–∏—Ç—å –ø–æ –Ω–æ–º–µ—Ä—É',
                                $url = '',
                                '/change/delete_choice'
                            )
                        ],
                    ]
                ),
                'text' => '–ß—Ç–æ –º–Ω–µ —Å–¥–µ–ª–∞—Ç—å?'
            ]
        );
    }

    public function delete_choice()
    {
        //Put the command on hold;
        $this->db->setWaitingCommand($this->chat_id, '/change/delete');

        $this->telegram->sendMessage(
            [
                'chat_id' => $this->chat_id,
                'text' => '–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å [—è –∂–¥—É –ø—Ä–æ—Å—Ç–æ —Ü–∏—Ñ—Ä—É –Ω–∞–ø—Ä–∏–º–µ—Ä 10].'
            ]
        );
    }

    /**
     * @throws Exception
     */
    public function delete()
    {
        $message_id = $this->telegram->Text();

        if (!is_numeric($message_id)) {
            (new Error($this->telegram))->send('–Ø –æ–∂–∏–¥–∞—é —á–∏—Å–ª–æ –∏ –æ–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0', false);
            // return the command on hold;
            $this->db->setWaitingCommand($this->chat_id, '/change/delete');
            return;
        }

        if (!$this->db->existCheckMessage(
            [
                'message_id' => $message_id,
                'chat_id' => $this->chat_id,
            ]
        )) {
            (new Error($this->telegram))->send(
                '–°–æ–æ–±—â–µ–Ω–∏–µ /_' . $message_id . ' —É–∂–µ —É–¥–∞–ª–µ–Ω–æ –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ü§ö',
                false
            );
            return;
        }

        $this->db->deleteMessage(
            [
                'message_id' => $message_id,
                'chat_id' => $this->chat_id,
            ]
        );

        $this->telegram->sendMessage(
            [
                'chat_id' => $this->chat_id,
                'text' => '–Ø —É–¥–∞–ª–∏–ª–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ /_' . $message_id . ' üëå'
            ]
        );
    }

    public function delete_last_sent()
    {
        $m_last = $this->db->getLastMessage($this->chat_id);

        if (empty($m_last)) {
            (new Error($this->telegram))->send('–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π ü§ö', false);
        }

        $this->db->editMessageByMessageId(
            [
                'message_id' => $m_last['message_id'],
                'chat_id' => $this->chat_id,
                'display' => false,
            ]
        );

        $this->telegram->sendMessage(
            [
                'chat_id' => $this->chat_id,
                'text' => '–°–æ–æ–±—â–µ–Ω–∏–µ /_' . $m_last['message_id']
                    . ' "' . shorten_line($m_last['text']) . '" —É–¥–∞–ª–µ–Ω–æ üëå',
            //                'reply_markup' => $this->telegram->buildInlineKeyBoard(
            //                    [
            //                        [
            //                            $this->telegram->buildInlineKeyBoardButton(
            //                                '‚óÄ –û—Ç–º–µ–Ω–∏—Ç—å',
            //                                $url = '',
            //                                '/change/delete_undo'
            //                            )
            //                        ],
            //                    ]
            //                ),
            ]
        );
    }

    public function choice()
    {
        $this->telegram->sendMessage(
            [
                'chat_id' => $this->chat_id,
                'text' => '–î–≤–∞ —Å–ø–æ—Å–æ–±–∞:'
                    . PHP_EOL . '1. –ù–∞–π—Ç–∏, –≥–¥–µ —Ç—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—à—å –º–Ω–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–±—ã—á–Ω—ã–º –¥–ª—è telegram —Å–ø–æ—Å–æ–±–æ–º.'
                    . PHP_EOL . '2. –£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ —É–∂–µ –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç.'
            ]
        );
    }
}
